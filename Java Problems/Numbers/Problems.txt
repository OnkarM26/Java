**Java Programming Problems on Numbers**

## 🟢 Basic Problems (Beginner Level)
1. **Sum of Two Numbers** – Take two numbers as input and print their sum.
2. **Swap Two Numbers** – Swap two numbers without using a third variable.
3. **Check Even or Odd** – Determine if a number is even or odd.
4. **Find Maximum & Minimum** – Find the largest and smallest number among three numbers.
5. **Simple Arithmetic Calculator** – Perform `+`, `-`, `*`, `/` operations based on user choice.
6. **Check Positive, Negative, or Zero** – Print whether a number is positive, negative, or zero.

---

## 🟡 Intermediate Problems
7. **Reverse a Number** – Reverse the digits of a number (e.g., `123 → 321`).
8. **Palindrome Number** – Check if a number is the same when reversed (e.g., `121 → Yes, 123 → No`).
9. **Sum of Digits** – Find the sum of all digits of a number (e.g., `123 → 1+2+3 = 6`).
10. **Count Digits in a Number** – Count the number of digits in a given number.
11. **Factorial of a Number** – Calculate `n!` using loops and recursion.
12. **Check Prime Number** – Determine if a number is prime or not.
13. **Print All Prime Numbers in a Range** – List prime numbers between `1` to `N`.
14. **Greatest Common Divisor (GCD) & Least Common Multiple (LCM)** – Find GCD and LCM of two numbers.
15. **Armstrong Number** – Check if a number is an Armstrong number (e.g., `153 = 1³ + 5³ + 3³`).
16. **Fibonacci Series** – Generate the Fibonacci sequence up to `N` terms.
17. **Check Perfect Number** – A number whose sum of divisors equals itself (e.g., `6 = 1+2+3`).
18. **Check Automorphic Number** – A number whose square ends with the number itself (`25² = 625`).
19. **Convert Decimal to Binary, Octal & Hexadecimal** – Convert numbers to different bases.

---

## 🔴 Advanced Problems
20. **Strong Number** – A number where the sum of factorials of digits equals the number (`145 = 1! + 4! + 5!`).
21. **Nth Prime Number** – Find the `N`th prime number.
22. **Sum of Prime Factors** – Find the sum of all prime factors of a number.
23. **Magic Number** – A number that reduces to `1` by repeatedly summing digits until a single digit remains (`19 → 1+9 = 10 → 1+0 = 1`).
24. **Kaprekar Number** – A number where the square split into two parts adds to the number itself (`45² = 2025 → 20 + 25 = 45`).
25. **Find the Missing Number in an Array** – Given numbers from `1 to N`, find the missing one.
26. **Check Happy Number** – A number where the sum of squares of digits leads to `1` (`19 → 1² + 9² = 82 → 8² + 2² = 68 → ... → 1`).
27. **Check Harshad Number (Niven Number)** – A number divisible by the sum of its digits (`18 / (1+8) = 2`).
28. **Check if Two Numbers Are Amicable** – If the sum of proper divisors of each equals the other (`220 & 284`).
29. **Find the Largest Palindromic Number in a Range**.
30. **Super Prime Numbers** – A prime number whose position in the list of primes is also prime.
31. **Find the Digital Root of a Number** – Sum digits repeatedly until a single digit remains.

---

## 🛠️ Challenge Problems (Expert Level)
32. **Convert Roman Numerals to Integer & Vice Versa**.
33. **Goldbach’s Conjecture** – Express an even number as the sum of two prime numbers.
34. **Find Numbers With Same Sum of Digits in a Range**.
35. **Count Numbers With Exactly `K` Factors**.
36. **Find Nth Ugly Number** – Numbers whose only prime factors are `2, 3, 5`.
37. **Implement Large Number Arithmetic (BigInteger Usage)** – Handle numbers larger than `Long.MAX_VALUE`.
38. **Josephus Problem (Circular Elimination)**.
39. **Generate Lucky Numbers** – A sequence of numbers generated by a sieve-like process.
40. **Collatz Conjecture Simulation** – A sequence where `n → n/2` (if even) or `n → 3n+1` (if odd) always reaches `1`.

---

### 🎯 Next Steps
- Would you like **solutions** for any of these problems?
- Do you need **step-by-step explanations** for any specific topic? 🚀

